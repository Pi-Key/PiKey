#ifndef pikey_scanner_h
#define pikey_scanner_h

typedef enum {
	TOKEN_LEFT_PAREN, TOKEN_RIGHT_PAREN,
	TOKEN_LEFT_BRACE, TOKEN_RIGHT_BRACE,
	TOKEN_COMMA, TOKEN_DOT, TOKEN_MINUS, TOKEN_PLUS,
	TOKEN_SEMICOLON, TOKEN_SLASH, TOKEN_STAR,

	TOKEN_PLUS_EQUAL, TOKEN_MINUS_EQUAL, TOKEN_PERCENT,
	TOKEN_STAR_STAR, TOKEN_AMPERSAND, TOKEN_PIPE,
	TOKEN_CARET, TOKEN_GREATER_GREATER,
	TOKEN_LESSER_LESSER,

	TOKEN_BANG, TOKEN_BANG_EQUAL,
	TOKEN_EQUAL, TOKEN_EQUAL_EQUAL,
	TOKEN_GREATER, TOKEN_GREATER_EQUAL,
	TOKEN_LESSER, TOKEN_LESSER_EQUAL,

	TOKEN_IDENTIFIER, TOKEN_STRING, TOKEN_NUMBER,

	TOKEN_AND, TOKEN_ELSE, TOKEN_FALSE, TOKEN_FOR,
	TOKEN_FUNCTION, TOKEN_IF, TOKEN_NULL, TOKEN_OR,
	TOKEN_TYPE, TOKEN_RETURN, TOKEN_TRUE, TOKEN_VAR,
	TOKEN_WHILE,

	TOKEN_ERROR, TOKEN_EOF
} TokenType;

typedef struct {
	TokenType type;
	const char* start;
	int length;
	int line;
} Token;

void init_scanner(const char* source);

Token scan_token();

#endif // !pikey_scanner_h
